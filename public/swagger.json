{
  "openapi": "3.0.0",
  "info": {
    "title": "Trentino Stage API",
    "version": "1.0"
  },
  "paths": {
    "/api/accounts/getProfileId": {
      "get": {
        "summary": "Retrieve the profile ID for a given account ID",
        "description": "This endpoint returns the profile ID associated with the provided account ID.",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "required": true,
            "description": "The ID of the account for which to retrieve the profile ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the profile ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profileId": {
                      "type": "string",
                      "description": "The profile ID associated with the provided account ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating the missing required fields."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code indicating the missing account ID."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/register": {
      "post": {
        "summary": "Register a new account",
        "description": "Creates a new account. If an invitation token is provided, the account will be connected to the profile associated with the token. Returns a session token upon successful registration.",
        "tags": [
          "Accounts"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the new account."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new account."
                  },
                  "role": {
                    "token": "string",
                    "description": "The role of the account. It's mandatory if no invitation token is provided. Possible values are \"admin\", \"user\", \"company-manager\", \"company-employee\"."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string",
            "required": false,
            "description": "Invitation token to connect the account to a profile."
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Session token for the newly created account."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. Possible reasons include invalid email, email already in use, invalid password, or invalid invitation token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message explaining the reason for failure.",
                      "example": "Email is already in use"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message explaining the reason for failure.",
                      "example": "Unsupported content type"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/role": {
      "get": {
        "summary": "Retrieve the role of an account based on a session token.",
        "description": "This endpoint retrieves the role of an account by validating the provided session token.",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session token used to identify the account."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the role of the account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "description": "The role of the account."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access due to missing or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/apply": {
      "post": {
        "summary": "Apply for a new application",
        "description": "Endpoint to allow users to apply for a specific application. Only individual accounts are allowed to apply.",
        "consumes": [
          "multipart/form-data",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "Application data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Session token of the user."
                },
                "applicationId": {
                  "type": "string",
                  "description": "ID of the application to apply for."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application created successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Invalid token or account type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Application not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Application not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-application-not-found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type or missing applicationId field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported content type"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/create": {
      "post": {
        "summary": "Create a new application",
        "description": "Endpoint to create a new application with the provided details.",
        "tags": [
          "Applications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token for authentication",
                    "example": "your-session-token"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the application",
                    "example": "Application Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the application",
                    "example": "Application Description"
                  },
                  "sector": {
                    "type": "string",
                    "description": "Sector of the application",
                    "example": "Technology"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the application",
                    "example": "USA"
                  },
                  "region": {
                    "type": "string",
                    "description": "Region of the application",
                    "example": "California"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the application",
                    "example": "San Francisco"
                  },
                  "weekly_hours": {
                    "type": "integer",
                    "description": "Weekly hours for the application",
                    "example": 40
                  }
                },
                "required": [
                  "token",
                  "title",
                  "description",
                  "sector",
                  "country",
                  "region",
                  "city",
                  "weekly_hours"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application created successfully"
          },
          "403": {
            "description": "Invalid token"
          },
          "405": {
            "description": "Invalid request or unsupported content type"
          }
        }
      }
    },
    "/api/applications/list": {
      "get": {
        "summary": "Retrieve a list of open positions for a company.",
        "description": "This endpoint retrieves all open positions for a specified company. \nIf the user accessing the endpoint is the company that created the positions, \nall fields are returned. Otherwise, sensitive fields such as `applied_users` \nand `chosen_user` are omitted.\n",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session token of the user making the request."
          },
          {
            "in": "query",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The profile ID of the company whose positions are being queried."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of open positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issuer_id": {
                        "type": "string",
                        "description": "The ID of the company that created the position."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the position."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the position."
                      },
                      "sector": {
                        "type": "string",
                        "description": "The sector of the position."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the position."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access due to missing or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "The error code."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/applications/modify": {
      "post": {
        "summary": "Modify an existing application",
        "description": "This endpoint allows you to modify an existing application by providing the necessary fields. Can also be used to set a chosen user for the application.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "type": "string",
            "required": true,
            "description": "Session token for authentication."
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true,
            "description": "Title of the application."
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "Description of the application."
          },
          {
            "in": "formData",
            "name": "sector",
            "type": "string",
            "required": true,
            "description": "Sector of the application."
          },
          {
            "in": "formData",
            "name": "country",
            "type": "string",
            "required": true,
            "description": "Country of the application."
          },
          {
            "in": "formData",
            "name": "region",
            "type": "string",
            "required": true,
            "description": "Region of the application."
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "required": true,
            "description": "City of the application."
          },
          {
            "in": "formData",
            "name": "weekly_hours",
            "type": "integer",
            "required": true,
            "description": "Weekly hours for the application."
          },
          {
            "in": "formData",
            "name": "chosen_user",
            "type": "string",
            "required": false,
            "description": "Chosen user for the application."
          }
        ],
        "responses": {
          "200": {
            "description": "Application modified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application modified successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Missing required fields"
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-session-token"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported content type"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error modifying application",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error modifying application"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/status": {
      "get": {
        "summary": "Retrieve the status of a specific application",
        "description": "Endpoint for companies to view the status of their applications.",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "applicationId",
            "required": true,
            "description": "The ID of the application to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the application status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "issuer_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "other_fields": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing required fields or invalid session token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profiles/get": {
      "get": {
        "summary": "Retrieve profile information",
        "description": "Given the profile ID and the authentication token, returns the profile information.",
        "tags": [
          "Profiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profileId",
            "required": true,
            "description": "ID of the profile to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "address": {
                      "type": "string"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "sector": {
                      "type": "string"
                    },
                    "cv": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid session token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/profiles/invite": {
      "get": {
        "summary": "Creates an invitation token for a profile",
        "description": "Generates an invitation token for a profile based on the provided session token, duration, and role.",
        "tags": [
          "Profiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token to validate the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "duration",
            "required": true,
            "description": "Duration for the invitation token in the format \"1h\", \"1d\", \"1w\", or \"1m\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": true,
            "description": "Role for the invitation token (company-manager or company-employee)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The generated invitation token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid role provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid session token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Couldn't create token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profiles/isCompany": {
      "get": {
        "summary": "Check if the user is a company",
        "description": "Returns whether the user associated with the provided session token or account ID is a company. At least one of the two parameters must be provided.",
        "tags": [
          "Profiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The session token of the user"
          },
          {
            "in": "query",
            "name": "accountId",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The account ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object indicating whether the user is a company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isCompany": {
                      "type": "boolean",
                      "description": "Indicates if the user is a company"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing session token or account ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profiles/modify": {
      "post": {
        "summary": "Modify user profile",
        "description": "Endpoint to modify user profile details.",
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionToken": {
                    "type": "string",
                    "description": "Session token for authentication.",
                    "example": "your-session-token"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's first name.",
                    "example": "John"
                  },
                  "surname": {
                    "type": "string",
                    "description": "User's surname.",
                    "example": "Doe"
                  },
                  "country": {
                    "type": "string",
                    "description": "User's country.",
                    "example": "USA"
                  },
                  "region": {
                    "type": "string",
                    "description": "User's region.",
                    "example": "California"
                  },
                  "city": {
                    "type": "string",
                    "description": "User's city.",
                    "example": "Los Angeles"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "User's postal code.",
                    "example": "90001"
                  },
                  "street": {
                    "type": "string",
                    "description": "User's street.",
                    "example": "123 Main St"
                  },
                  "address": {
                    "type": "string",
                    "description": "User's address.",
                    "example": "123 Main St, Apt 4B"
                  },
                  "bio": {
                    "type": "string",
                    "description": "User's bio.",
                    "example": "Software Developer"
                  },
                  "sector": {
                    "type": "string",
                    "description": "User's sector. Multiple sectors can be separated by commas.",
                    "example": "Technology, Software"
                  },
                  "website": {
                    "type": "string",
                    "description": "User's website.",
                    "example": "https://example.com"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Company's identifier. ",
                    "example": 123456789100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile modified successfully."
          },
          "401": {
            "description": "Invalid session token."
          },
          "405": {
            "description": "Unsupported content type."
          }
        }
      }
    },
    "/api/profiles/new": {
      "produces": [
        "application/json"
      ],
      "post": {
        "summary": "Create a new profile and link it to the user",
        "description": "Create a new profile and link it to the user. The profile can be a company or a person",
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionToken": {
                    "type": "string",
                    "description": "The authentication token"
                  },
                  "is_company": {
                    "type": "boolean",
                    "description": "True if the profile is a company, false if it's a person"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the profile"
                  },
                  "surname": {
                    "type": "string",
                    "description": "The surname of the profile"
                  },
                  "country": {
                    "type": "string",
                    "description": "The country where the user/company is located"
                  },
                  "region": {
                    "type": "string",
                    "description": "The region where the user/company is located"
                  },
                  "city": {
                    "type": "string",
                    "description": "The city where the user/company is located"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "The postal code where the user/company is located"
                  },
                  "street": {
                    "type": "string",
                    "description": "The street where the user/company is located"
                  },
                  "address": {
                    "type": "string",
                    "description": "The full address where the user/company is located"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The birth date of the user"
                  },
                  "bio": {
                    "type": "string",
                    "description": "A short biography of the user/company"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "The fiscal code or P.iva of the user/company"
                  },
                  "sector": {
                    "type": "string",
                    "description": "The sector in which the user/company operates"
                  },
                  "website": {
                    "type": "string",
                    "description": "The website of the user/company"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successfully created the profile"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "message": "Profile created"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "error": "Invalid session token"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "error": "Unsupported content type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "error": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews/edit": {
      "post": {
        "summary": "Edit a review",
        "description": "Updates an existing review for a user. At least one of the fields (title, review, or rating) must be provided for the update.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user.",
                    "example": "user-session-token"
                  },
                  "reviewId": {
                    "type": "string",
                    "description": "The ID of the review to be updated.",
                    "example": "64f1c2e5d4a3b2c1a1e5f6d7"
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title of the review (optional).",
                    "example": "Updated Review Title"
                  },
                  "review": {
                    "type": "string",
                    "description": "The new body of the review (optional).",
                    "example": "This is the updated review content."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "The new rating for the review (optional).",
                    "example": 4
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user.",
                    "example": "user-session-token"
                  },
                  "reviewId": {
                    "type": "string",
                    "description": "The ID of the review to be updated.",
                    "example": "64f1c2e5d4a3b2c1a1e5f6d7"
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title of the review (optional).",
                    "example": "Updated Review Title"
                  },
                  "review": {
                    "type": "string",
                    "description": "The new body of the review (optional).",
                    "example": "This is the updated review content."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "The new rating for the review (optional).",
                    "example": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Review updated successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing required fields or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing required fields"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-missing-fields"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Review not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Review not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-review-not-found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type or no fields to update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported content type"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews/get": {
      "get": {
        "summary": "Retrieve reviews for a specific profile",
        "description": "Fetches a list of reviews for a given profile, with optional pagination.",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session token for authentication."
          },
          {
            "in": "query",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the profile whose reviews are being fetched."
          },
          {
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "The starting index for pagination."
          },
          {
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "The ending index for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reviews for the specified profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reviewer": {
                        "type": "string",
                        "description": "The ID of the reviewer."
                      },
                      "rating": {
                        "type": "number",
                        "description": "The rating given by the reviewer."
                      },
                      "comment": {
                        "type": "string",
                        "description": "The review comment."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access to the profile's reviews is forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews/review": {
      "post": {
        "summary": "Create a review for a profile.",
        "description": "Allows users to create reviews for profiles. Users can only review companies, and companies can only review users.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user."
                  },
                  "reviewedProfile": {
                    "type": "string",
                    "description": "The ID of the profile being reviewed."
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the review."
                  },
                  "review": {
                    "type": "string",
                    "description": "The content of the review."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "The rating for the review (1-5).",
                    "minimum": 1,
                    "maximum": 5
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user."
                  },
                  "reviewedProfile": {
                    "type": "string",
                    "description": "The ID of the profile being reviewed."
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the review."
                  },
                  "review": {
                    "type": "string",
                    "description": "The content of the review."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "The rating for the review (1-5).",
                    "minimum": 1,
                    "maximum": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "The created review data.",
                      "properties": {
                        "reviewer_id": {
                          "type": "string",
                          "description": "The ID of the reviewer."
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the review."
                        },
                        "review": {
                          "type": "string",
                          "description": "The content of the review."
                        },
                        "rating": {
                          "type": "integer",
                          "description": "The rating of the review."
                        },
                        "creation_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The creation time of the review."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid request or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/session/create": {
      "post": {
        "summary": "Authenticate user and return session token",
        "description": "This endpoint allows a user to log in with a email and password, receiving a session token upon successful authentication.",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email",
                    "example": "john_doe"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password",
                    "format": "password",
                    "example": "securepassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The session token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message explaining the reason for failure",
                      "example": "Invalid username or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/session/destroy": {
      "post": {
        "summary": "Destroy a session token",
        "description": "This endpoint allows a user to destroy a session token, logging out the user.",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token to destroy",
                    "example": "eyJhbGciOi..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session destroyed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Result of the operation",
                      "example": "Session destroyed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message explaining the reason for failure",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message explaining the reason for failure",
                      "example": "Unsupported content type"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/session/verify": {
      "get": {
        "summary": "Verify session token and retrieve profile ID",
        "description": "Verifies the session token and, if the token is valid, returns the profile ID associated with the token",
        "tags": [
          "Session"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session token to verify"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved profile ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profileId": {
                      "type": "string",
                      "description": "The profile ID associated with the session token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid session token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}