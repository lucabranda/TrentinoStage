{
  "openapi": "3.0.0",
  "info": {
    "title": "Trentino Stage API",
    "version": "1.0"
  },
  "paths": {
    "/api/accounts": {
      "get": {
        "summary": "Retrieve account information based on session token",
        "description": "Fetches the email, role, and profile ID of an account using a valid session token.",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session token of the account."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "The email address of the account."
                    },
                    "role": {
                      "type": "string",
                      "description": "The role of the account."
                    },
                    "profileId": {
                      "type": "string",
                      "description": "The profile ID associated with the account."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new account",
        "description": "Registers a new account with email, password, and optional invitation token or role.",
        "tags": [
          "Accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the new account."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new account."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role of the new account (required if no invitation token is provided)."
                  },
                  "token": {
                    "type": "string",
                    "description": "An optional invitation token for account creation."
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the new account."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new account."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role of the new account (required if no invitation token is provided)."
                  },
                  "token": {
                    "type": "string",
                    "description": "An optional invitation token for account creation."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The session token for the newly created account."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/applications": {
      "post": {
        "summary": "Apply for a position",
        "description": "Endpoint to allow users to apply for a specific position.",
        "tags": [
          "Applications"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user."
                  },
                  "positionId": {
                    "type": "string",
                    "description": "The ID of the position to apply for."
                  },
                  "message": {
                    "type": "string",
                    "description": "Optional message to include with the application."
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token of the user."
                  },
                  "positionId": {
                    "type": "string",
                    "description": "The ID of the position to apply for."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Application created successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid token or account type. Companies cannot apply for positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid account type. Companies can't apply"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-account-type"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Application not found or position does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Application not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-application-not-found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type or missing positionId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported content type"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get the positions to which the user is applied to",
        "description": "Retrieve the list of positions the user has applied to.",
        "tags": [
          "Applications"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session token of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "List of positions retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The ID of the position."
                      },
                      "issuerId": {
                        "type": "string",
                        "description": "The ID of the issuer of the position."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the position."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the position."
                      },
                      "sector": {
                        "type": "string",
                        "description": "The sector of the position."
                      },
                      "weeklyHours": {
                        "type": "number",
                        "description": "The weekly hours required for the position."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the position."
                      },
                      "creationTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the position was created."
                      },
                      "isOpen": {
                        "type": "boolean",
                        "description": "Whether the position is still open or not."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing required fields or invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Token not valid or expired"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-session-token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cv": {
      "post": {
        "summary": "Upload a CV file for the authenticated user",
        "description": "Uploads a single CV file (PDF, DOC, etc.) for the authenticated user. Only one file per user is allowed.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token for authentication"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The CV file to upload"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "description": "Base64-encoded file content (not recommended)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully"
          },
          "400": {
            "description": "No file uploaded or invalid file type"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User already uploaded a file"
          },
          "405": {
            "description": "Unsupported content type"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Download a user's CV file",
        "description": "Returns the CV file for the specified profile if the requester is the owner or a company.",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Session token for authentication"
          },
          {
            "in": "query",
            "name": "profileId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Profile ID of the user whose CV is requested"
          }
        ],
        "responses": {
          "200": {
            "description": "File download stream",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid session token"
          },
          "404": {
            "description": "No files found"
          },
          "500": {
            "description": "Database connection error"
          }
        }
      },
      "delete": {
        "summary": "Delete the authenticated user's CV file",
        "description": "Deletes the CV file associated with the authenticated user's profile.",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Session token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully"
          },
          "401": {
            "description": "Missing required fields or invalid session token"
          },
          "404": {
            "description": "No files found for this profile"
          },
          "500": {
            "description": "Failed to delete file or database connection error"
          }
        }
      },
      "put": {
        "summary": "Replace the authenticated user's CV file",
        "description": "Replaces the existing CV file for the authenticated user with a new one. Only one file per user is allowed.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token for authentication"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new CV file to upload"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "description": "Base64-encoded file content (not recommended)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully"
          },
          "400": {
            "description": "No file uploaded or invalid file type"
          },
          "401": {
            "description": "Missing required fields or invalid session token"
          },
          "405": {
            "description": "Unsupported content type"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/profiles/invite": {
      "get": {
        "summary": "Creates an invitation token for a profile",
        "description": "Generates an invitation token for a profile based on the provided session token, duration, and role.",
        "tags": [
          "Profiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token to validate the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "duration",
            "required": true,
            "description": "Duration for the invitation token in the format \"1h\", \"1d\", \"1w\", or \"1m\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": true,
            "description": "Role for the invitation token (company-manager or company-employee)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The generated invitation token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid role provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid session token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Couldn't create token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Positions": {
      "get": {
        "summary": "Retrieve a list of open positions",
        "description": "Fetches a list of open positions based on various filters such as sector, city, weekly hours, and position ID. If the user is a company, all data is returned. Otherwise, sensitive fields are omitted.",
        "tags": [
          "Positions"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profileId",
            "required": false,
            "description": "Profile ID of the company issuing the positions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sector",
            "required": false,
            "description": "Filter positions by sector. Multiple sectors can be separated by a pipe (`|`).",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "city",
            "required": false,
            "description": "Filter positions by city.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxTime",
            "required": false,
            "description": "Maximum weekly hours for the position.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minTime",
            "required": false,
            "description": "Minimum weekly hours for the position.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "positionId",
            "required": false,
            "description": "Filter by a specific position ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of open positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issuer_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "sector": {
                        "type": "string"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "city": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      },
                      "weekly_hours": {
                        "type": "number"
                      },
                      "creation_time": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid session token."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "summary": "Create a new position",
        "description": "Allows a company to create a new job position. Only accounts with a company profile can use this endpoint.",
        "tags": [
          "Positions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "title",
                  "description",
                  "sector",
                  "country",
                  "region",
                  "city",
                  "weeklyHours"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token of the user."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the position."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the position."
                  },
                  "sector": {
                    "type": "string",
                    "description": "Sector of the position."
                  },
                  "country": {
                    "type": "string",
                    "description": "Country where the position is located."
                  },
                  "region": {
                    "type": "string",
                    "description": "Region where the position is located."
                  },
                  "city": {
                    "type": "string",
                    "description": "City where the position is located."
                  },
                  "weeklyHours": {
                    "type": "number",
                    "description": "Weekly hours required for the position."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Position created successfully."
          },
          "403": {
            "description": "Invalid account type or token."
          },
          "405": {
            "description": "Invalid request or unsupported content type."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "summary": "Modify an existing position",
        "description": "Allows a company to modify an existing job position. If a chosen user is specified, other fields are ignored.",
        "tags": [
          "Positions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token of the user."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the position."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the position."
                  },
                  "sector": {
                    "type": "string",
                    "description": "Sector of the position."
                  },
                  "country": {
                    "type": "string",
                    "description": "Country where the position is located."
                  },
                  "region": {
                    "type": "string",
                    "description": "Region where the position is located."
                  },
                  "city": {
                    "type": "string",
                    "description": "City where the position is located."
                  },
                  "weeklyHours": {
                    "type": "number",
                    "description": "Weekly hours required for the position."
                  },
                  "chosenUser": {
                    "type": "string",
                    "description": "ID of the chosen user for the position."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Position modified successfully."
          },
          "401": {
            "description": "Missing required fields."
          },
          "403": {
            "description": "Invalid session token."
          },
          "500": {
            "description": "Error modifying the position."
          }
        }
      }
    },
    "/api/positions": {
      "delete": {
        "summary": "Elimina una posizione esistente",
        "description": "Permette a un'azienda di eliminare una posizione esistente. L'utente deve essere autenticato e autorizzato.",
        "tags": [
          "Positions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "positionId"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Token di sessione dell'utente."
                  },
                  "positionId": {
                    "type": "string",
                    "description": "ID della posizione da eliminare."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posizione eliminata con successo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Position deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Campi richiesti mancanti.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing required fields"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-missing-fields"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Token non valido o non autorizzato.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-session-token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Posizione non trovata o non autorizzata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Position not found or unauthorized"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-not-found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Tipo di contenuto non supportato.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported content type"
                    },
                    "code": {
                      "type": "string",
                      "example": "error-invalid-request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profiles": {
      "get": {
        "summary": "Retrieve profile information",
        "description": "Given the profile ID and the authentication token, returns the profile information. If no profile ID is provided, it retrieves the user's own profile.",
        "tags": [
          "Profiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Session token for authentication"
          },
          {
            "in": "query",
            "name": "profileId",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "ID of the profile to retrieve (if not provided the profile of the user making the request is returned)"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "country": {
                          "type": "string"
                        },
                        "region": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "postal_code": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "sector": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isCompany": {
                      "type": "boolean"
                    },
                    "profile_image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid profile ID or other bad request"
          },
          "401": {
            "description": "Invalid session token"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new profile",
        "description": "Creates a new profile for the authenticated user. The user must not already have a profile.",
        "tags": [
          "Profiles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "isCompany": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "profile_image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "bio": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "sector": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile created successfully"
          },
          "400": {
            "description": "Invalid input or unsupported content type"
          },
          "401": {
            "description": "Invalid session token or user already has a profile"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Edit an existing profile",
        "description": "Updates the profile information for the authenticated user.",
        "tags": [
          "Profiles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionToken": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "bio": {
                    "type": "string"
                  },
                  "sector": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile modified successfully"
          },
          "400": {
            "description": "Invalid input or unsupported content type"
          },
          "401": {
            "description": "Invalid session token"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/reviews": {
      "get": {
        "summary": "Retrieve reviews of a profile",
        "description": "Fetches a paginated list of reviews for a specific profile",
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "Session token of the user making the request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profileId",
            "required": true,
            "description": "ID of the profile whose reviews are being fetched.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Starting index for pagination (default is 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "to",
            "required": false,
            "description": "Ending index for pagination (default is 10).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the reviews.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid session token or required fields."
          },
          "403": {
            "description": "Access denied to the requested profile's reviews."
          },
          "404": {
            "description": "Profile not found."
          }
        }
      },
      "post": {
        "summary": "Create a new review",
        "description": "Allows a user to create a review for another profile. Only users can review companies and only companies can review users. Each profile can review another profile only once.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "reviewedProfile",
                  "title",
                  "review",
                  "rating"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token of the user creating the review."
                  },
                  "reviewedProfile": {
                    "type": "string",
                    "description": "ID of the profile being reviewed."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the review."
                  },
                  "review": {
                    "type": "string",
                    "description": "Content of the review."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "Rating for the profile (1-5)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review created successfully."
          },
          "403": {
            "description": "Invalid session token or unauthorized review."
          },
          "404": {
            "description": "Profile not found."
          },
          "405": {
            "description": "Missing parameters, invalid review type, or profile has already reviewed this profile."
          }
        }
      },
      "put": {
        "summary": "Update an existing review",
        "description": "Allows a user to update their own review. At least one field (title, review, or rating) must be provided for the update.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "reviewId"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Session token of the user updating the review."
                  },
                  "reviewId": {
                    "type": "string",
                    "description": "ID of the review to be updated."
                  },
                  "title": {
                    "type": "string",
                    "description": "New title for the review (optional)."
                  },
                  "review": {
                    "type": "string",
                    "description": "New content for the review (optional)."
                  },
                  "rating": {
                    "type": "integer",
                    "description": "New rating for the review (optional)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review updated successfully."
          },
          "401": {
            "description": "Missing or invalid session token or required fields."
          },
          "404": {
            "description": "Review not found."
          },
          "405": {
            "description": "No fields provided for update."
          }
        }
      }
    },
    "/api/session": {
      "get": {
        "summary": "Check the status of a session token",
        "description": "Validates a session token and retrieves the associated profile ID.",
        "tags": [
          "Session"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "description": "The session token to validate.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session token is valid, profile ID returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profileId": {
                      "type": "string",
                      "description": "The ID of the associated profile."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new session token",
        "description": "Authenticates a user using email and password, and generates a session token.",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session token created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The generated session token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a session token",
        "description": "Deletes an existing session token, effectively logging the user out.",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token to delete."
                  }
                },
                "required": [
                  "token"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The session token to delete."
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session destroyed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Confirmation message."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing session token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Unsupported content type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}